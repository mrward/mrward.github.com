<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: T4 | Matt Ward]]></title>
  <link href="http://mrward.github.com/blog/categories/t4/atom.xml" rel="self"/>
  <link href="http://mrward.github.com/"/>
  <updated>2012-09-06T08:11:14+01:00</updated>
  <id>http://mrward.github.com/</id>
  <author>
    <name><![CDATA[Matt Ward]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[T4 Import Directive - Namespace Alias]]></title>
    <link href="http://mrward.github.com/blog/2011/10/04/T4ImportNamespaceAlias/"/>
    <updated>2011-10-04T19:54:00+01:00</updated>
    <id>http://mrward.github.com/blog/2011/10/04/T4ImportNamespaceAlias</id>
    <content type="html"><![CDATA[<p>How do you specify a namespace alias when using the <a href="http://msdn.microsoft.com/en-us/library/gg586948.aspx">Import directive</a> in a T4 template?</p>

<p>The <a href="http://msdn.microsoft.com/en-us/library/gg586948.aspx">Import directive</a> in a T4 template is used to bring a namespace  into scope for any code that will be run when the T4 template is processed. Here is an example template that imports the System.IO namespace without using a namespace alias.</p>

<pre><code>&lt;#@ template language="C#" #&gt; 
&lt;#@ output extension=".txt" #&gt; 
&lt;#@ import namespace="System.IO" #&gt; 
&lt;# 
 string text = File.ReadAllText(@"d:\MyFile.txt"); 
#&gt; 
File content: &lt;#= text #&gt;
</code></pre>

<p>The T4 template reads all the text in the d:\MyFile.txt which is then saved in the file generated by the template.</p>

<p>If you want to use a namespace alias you can specify it in the import directive in a similar way to how it is done with C# or VB.NET. Here is the example template modified so that an alias of IO is used for the System.IO namespace.</p>

<pre><code>&lt;#@ template language="C#" #&gt; 
&lt;#@ output extension=".txt" #&gt; 
&lt;#@ import namespace="IO = System.IO" #&gt; 
&lt;# 
 string text = IO.File.ReadAllText(@"d:\temp\test.xsd"); 
#&gt; 
File content: &lt;#= text #&gt;
</code></pre>

<h2>Why does this Work?</h2>

<p>T4 templates use the  <a href="http://msdn.microsoft.com/en-us/library/y2k85ax6.aspx">CodeDom</a> to generate C# or VB.NET code which is then executed as the template is processed. When the T4 templating engine processes the Import directive it creates a    <a href="http://msdn.microsoft.com/en-us/library/system.codedom.codenamespaceimport.aspx">CodeNamespaceImport</a> Object and passes it the Namespace attribute&apos;s value. The CodeNamespaceImport object supports generating a namespace alias when you specify a string of the form &quot;Alias = Namespace&quot; and pass this to its constructor.</p>
]]></content>
  </entry>
  
</feed>
