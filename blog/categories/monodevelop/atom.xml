<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: monodevelop | Matt Ward]]></title>
  <link href="http://lastexitcode.com/blog/categories/monodevelop/atom.xml" rel="self"/>
  <link href="http://lastexitcode.com/"/>
  <updated>2022-10-01T16:11:08+01:00</updated>
  <id>http://lastexitcode.com/</id>
  <author>
    <name><![CDATA[Matt Ward]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 17.3]]></title>
    <link href="http://lastexitcode.com/blog/2022/09/01/NuGetSupportInVisualStudioMac17-3/"/>
    <updated>2022-09-01T14:20:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2022/09/01/NuGetSupportInVisualStudioMac17-3</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 6.2.1 support</li>
<li> Improved NuGet restore support for a solution containing classic and SDK style projects

<ul>
<li>Fixed unable to find WorkloadAutoImportPropsLocator SDK restore error with classic and SDK style projects</li>
<li>Fixed invalid framework identifer restore error with classic and SDK style projects</li>
<li>Fixed error restoring Mapsui.Mac.sln</li>
</ul>
</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 17.3</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releases/2022/mac-release-notes">release notes</a>.</p>

<h2>NuGet 6.2.1 support</h2>

<p><a href="https://learn.microsoft.com/en-us/nuget/release-notes/nuget-6.2">NuGet 6.2.1.2</a> is now
included with Visual Studio for Mac 17.3.</p>

<h2>Improved NuGet restore support for a solution containing classic and SDK style projects</h2>

<p>NuGet restore has been improved for a solution contains a mix of classic
(non SDK style projects) and SDK style projects. Problems can occur
in this case because classic projects require MSBuild on Mono, whilst SDK style
projects typically require .NET MSBuild.</p>

<p>The following sections contain information about the individual problems that have
been fixed in Visual Studio for Mac 17.3</p>

<p><strong>Fixed unable to find WorkloadAutoImportPropsLocator SDK restore error with classic and SDK style projects</strong></p>

<p>If a solution contained a .NET 6 project, and a .NET 4.7.2 SDK style
project, and Building with MSBuild on Mono was unchecked in
Solution Properties &ndash; Build &ndash; General, the restore
would fail with an error when only .NET 6.0.300 SDK was installed:</p>

<pre><code>Unable to find SDK 'Microsoft.NET.SDK.WorkloadAutoImportPropsLocator'
</code></pre>

<p>To fix this Visual Studio for Mac now does not load referenced
projects when getting restore information for a specific project
using its MSBuild host. When all projects were loaded by the
MSBuild host, the project load would fail since the MSBuildSDKsPath
was not defined because .NET SDK was being used since none
supported using MSBuild on Mono.</p>

<p><strong>Fixed invalid framework identifer restore error with classic and SDK style projects</strong></p>

<p>If a solution contained a non-SDK style project then MSBuild on mono was
always used to restore if the solution contained more than 10
projects. This prevented some solutions from being
restored if they contained mix of .NET 6.0 projects and
classic non-SDK style projects, and had a global.json that pinned the .NET SDK
to 6.0.300. The restore would fail when MSBuild on mono was used with an
error about an invalid framework identifier.</p>

<p><code>
MonoBundle/MSBuild/Current/bin/NuGet.targets(162,5):
error MSB4018: The "WriteRestoreGraphTask" task failed unexpectedly.
error MSB4018: NuGet.Frameworks.FrameworkException: Invalid framework identifier ''.
error MSB4018:   at NuGet.Frameworks.NuGetFramework.GetShortFolderName (NuGet.Frameworks.IFrameworkNameProvider mappings)
error MSB4018:   at NuGet.Frameworks.NuGetFramework.GetShortFolderName ()
error MSB4018:   at NuGet.ProjectModel.PackageSpecWriter.WriteMetadataTargetFrameworks (NuGet.RuntimeModel.IObjectWriter writer, NuGet.ProjectModel.ProjectRestoreMetadata msbuildMetadata)
error MSB4018:   at NuGet.ProjectModel.PackageSpecWriter.SetMSBuildMetadata (NuGet.RuntimeModel.IObjectWriter writer, NuGet.ProjectModel.PackageSpec packageSpec)
</code></p>

<p>MSBuild on mono does not support .NET 6.0.300 sdk and, because of the
global.json file, Visual Studio for Mac did not downgrade to an older supported
.NET SDK which then caused the restore to fail since it cannot resolve the target framework.</p>

<p>To avoid this problem the restore now checks the Build with MSBuild
on Mono setting, in Solution Properties &ndash; Build &ndash; General, and if unchecked
the restore will succeed.</p>

<p><strong>Fixed error restoring Mapsui.Mac.sln</strong></p>

<p>The Mapsui.Mac.sln from <a href="https://github.com/Mapsui/Mapsui">https://github.com/Mapsui/Mapsui</a> would fail to
restore with following error when Build with
MSBuild on Mono was disabled in Solution Properties:</p>

<pre><code>error MSB4019: The imported project "/usr/local/share/dotnet/sdk/6.0.300/Xamarin/iOS/Xamarin.iOS.CSharp.targets" was not found.
</code></pre>

<p>The Mapsui.Mac.sln contains .NET 6.0 maui and some classic Xamarin
projects. It is not possible to restore these all projects with either
MSBuild on Mono or .NET&rsquo;s MSBuild. The solution also contains more than
10 projects which results in Visual Studio for Mac running MSBuild directly out of process
instead of using its MSBuild host. Since neither MSBuild on mono, nor .NET&rsquo;s MSBuild can
restore the solution, this would fail.</p>

<p>To fix this Visual Studio for Mac no longer runs MSBuild
directly out of process to run the restore when a solution contains a mix of project types that
require different MSBuild&rsquo;s. Instead Visual Studio for Mac runs the
restore with its MSBuild hosts, which support both MSBuild on Mono and
.NET&rsquo;s MSBuild. Each project then has the GenerateRestoreGraphFile MSBuild
target run separately using the correct MSBuild. This requires
the Build with MSBuild on Mono option to be unchecked, and allows
the Mapsui.Mac.sln to be restored.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 17.0]]></title>
    <link href="http://lastexitcode.com/blog/2022/06/19/NuGetSupportInVisualStudio17-0/"/>
    <updated>2022-06-19T12:20:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2022/06/19/NuGetSupportInVisualStudio17-0</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 6.0 support</li>
<li> NuGet.Config file location changed</li>
<li> NuGet package source passwords now stored in the Keychain</li>
<li> Improved clear text password handling for NuGet package sources</li>
<li> Support NuGet restore with .NET MSBuild and MSBuild on mono</li>
<li> NuGetizer support removed</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 17.0</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releases/2022/mac-release-notes">release notes</a>.</p>

<h2>NuGet 6.0 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-6.0">NuGet 6.0.0.262</a> is now
included with Visual Studio for Mac 17.0.</p>

<h2>NuGet.Config file location changed</h2>

<p>Visual Studio for Mac 17.0 now runs on .NET 6 instead of Mono. This means the
NuGet.Config file location has changed.</p>

<p>Old NuGet.Config file location used by Visual Studio for Mac 8.10 and mono:</p>

<pre><code>~/.config/NuGet/NuGet.Config
</code></pre>

<p>New NuGet.Config file location used by Visual Studio for Mac 17.0 and the dotnet command line interface:</p>

<pre><code>~/.nuget/NuGet/NuGet.Config
</code></pre>

<h2>NuGet package source passwords now stored in the Keychain</h2>

<p>The dotnet command line interface does not support encrypting NuGet package source
passwords.</p>

<p>This is because the
<a href="https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography.protecteddata?view=dotnet-plat-ext-6.0">ProtectedData</a> class
used by NuGet to encrypt and decrypt the package source passwords
is not available for .NET. The ProtectedData class is available for mono and .NET Framework v4.</p>

<p>One workaround is to
<a href="https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#packagesourcecredentials">store the passwords in clear text</a>
in the NuGet.Config file.</p>

<p>This can be done via <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-add-source">dotnet nuget add source</a>.</p>

<pre><code>dotnet nuget add source https://someServer/myTeam -n myTeam -u myUsername -p myPassword --store-password-in-clear-text
</code></pre>

<p>Or by editing the ~/.nuget/NuGet/NuGet.Config file.</p>

<p>```
<configuration>
  <packageSources></p>

<pre><code>&lt;add key="myTeam" value="https://someServer/myTeam" /&gt;
</code></pre>

<p>  </packageSources>
  <packageSourceCredentials></p>

<pre><code>&lt;myTeam&gt;
    &lt;add key="Username" value="myUsername" /&gt;
    &lt;add key="ClearTextPassword" value="myPassword" /&gt;
  &lt;/myTeam&gt;
</code></pre>

<p>  </packageSourceCredentials>
</configuration>
```</p>

<p>Now that Visual Studio for Mac 17.0 runs on .NET 6 it is also affected by
NuGet not being able to store encrypted passwords in the NuGet.Config file.</p>

<p>If a NuGet package source with a password is created in Visual Studio
for Mac 17.0 the password will be stored in the Keychain rather than using
a clear text password.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac17-0/AddNuGetPackageSourceCredential.png" title="&lsquo;Add NuGet package source with password in preferences&rsquo; &lsquo;Add NuGet package source with password in preferences&rsquo;" ></p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac17-0/KeychainNuGetPackageSourcePassword.png" title="&lsquo;Package source password saved in Keychain&rsquo; &lsquo;Package source password saved in Keychain&rsquo;" ></p>

<h2>Improved clear text password handling for NuGet package sources</h2>

<p>In Visual Studio for Mac 8.10 when the package sources where
saved in Preferences &ndash; NuGet &ndash; Sources any clear text passwords
were encrypted in the saved NuGet.Config file.</p>

<p>In Visual Studio for Mac 17.0 package sources that use clear text
passwords will not have their passwords encrypted in the NuGet.Config file.</p>

<h2>Support NuGet restore with .NET MSBuild and MSBuild on mono</h2>

<p>In order to support classic Xamarin projects, and projects that require mono,
Visual Studio for Mac 17.0 supports MSBuild on Mono and dotnet msbuild.</p>

<p>If any project in a solution has mono as a target
runtime then the solution is restored with MSBuild on mono. If all
projects target the dotnet runtime then dotnet&rsquo;s MSBuild will be
used. This prevents the restore failing for classic Android and iOS
projects since dotnet&rsquo;s MSBuild cannot resolve the Xamarin MSBuild targets
files, causing errors similar to the following:</p>

<pre><code>error MSB4019: The imported project "/usr/local/share/dotnet/sdk/6.0.101/Xamarin/Android/Xamarin.Android.CSharp.targets" was not found.
Confirm that the expression in the Import declaration
</code></pre>

<p>If the solution is configured to build with MSBuild on Mono then
large solutions are restored with MSBuild on Mono.</p>

<h2>NuGetizer support removed</h2>

<p>Integrated support for <a href="https://github.com/NuGet/NuGet.Build.Packaging">NuGetizer</a> has been
removed from Visual Studio for Mac 17.0. This is because the NuGetizer project is no
longer being maintained.</p>

<p><a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-pack">dotnet pack</a> can be used as
an alternative.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.10]]></title>
    <link href="http://lastexitcode.com/blog/2021/06/13/NuGetSupportInVisualStudioMac8-10/"/>
    <updated>2021-06-13T11:30:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2021/06/13/NuGetSupportInVisualStudioMac8-10</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> Manage NuGet Packages dialog now uses native macOS UI</li>
<li> NuGet 5.9 support</li>
<li> Support disabling NuGet restore in NuGet.Config</li>
<li> Fixed automatic restore may still run if disabled in preferences</li>
<li> Fixed $(SolutionDir) not defined when restoring large solutio</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.10</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>Manage NuGet Packages dialog now uses native macOS UI</h2>

<p>The Manage NuGet Packages dialog is now displayed using Xamarin.Mac.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-10/ManageNuGetPackagesDialog.png" title="&lsquo;Manage NuGet packages dialog&rsquo; &lsquo;Manage NuGet packages dialog&rsquo;" ></p>

<p>Previously the dialog was displayed using GTK#.</p>

<p>The following UI changes were also made:</p>

<ul>
<li>Tabs are now used for each page

<ul>
<li>Previously a link was used to select a page</li>
</ul>
</li>
<li>Search has moved to the same line as the window title</li>
<li>NuGet package sources have moved to the bottom
of the dialog</li>
<li><code>Show pre-release packages</code> check box has been renamed to <code>Include prereleases</code></li>
<li>Hyperlinks that were used to view the license and project pages
have been replaced with buttons</li>
<li>Close button has been removed</li>
</ul>


<h2>NuGet 5.9 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.9">NuGet 5.9.0.7134</a> is now
included with Visual Studio for Mac 8.10.</p>

<h2>Support disabling NuGet restore in NuGet.Config</h2>

<p>A NuGet.Config file can disable package restore via a enabled setting, as shown below.</p>

<pre><code>&lt;configuration&gt;
  &lt;packageRestore&gt;
    &lt;add key="enabled" value="false" /&gt;
  &lt;/packageRestore&gt;
&lt;/configuration&gt;
</code></pre>

<p>This is now supported in Visual Studio for Mac and will disable automatic package
restore overriding the setting in Preferences.</p>

<p><strong>Fixed automatic restore may still run if disabled in preferences</strong></p>

<p>Certain actions in SDK style projects, such as saving a project file in the
editor, and adding a reference to another project, would run a package restore even
if automatic restore was disabled in preferences.</p>

<p>Now, if automatic restore is disabled in preferences, no automatic restore
will be run. Restores can still be run from the main menu and the
Solution window.</p>

<p><strong>Fixed $(SolutionDir) not defined when restoring large solution</strong></p>

<p>When a solution contains more than 10 projects then MSBuild is used
directly to restore the projects. If a project was using the SolutionDir
property to import an MSBuild file then this would fail since SolutionDir
is not defined because no solution was being passed to MSBuild.</p>

<p>One way to reproduce this was to have an SDK style project that does not
define a TargetFramework itself but conditionally imports a project,
using a path that includes the $(SolutionDir) property, that defines
the TargetFramework. The NuGet restore would fail with an error about an
invalid framework identifier.</p>

<pre><code>error MSB4018: The “WriteRestoreGraphTask” task failed unexpectedly.
error MSB4018: NuGet.Frameworks.FrameworkException: Invalid
    framework identifier ‘’.
</code></pre>

<p>To fix this Visual Studio for Mac now runs the GenerateRestoreGraphFile
target specifying the solution, not just the projects. This allows
MSBuild to define the $(SolutionDir) property.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.9]]></title>
    <link href="http://lastexitcode.com/blog/2021/03/13/NuGetSupportInVisualStudio8-9/"/>
    <updated>2021-03-13T16:20:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2021/03/13/NuGetSupportInVisualStudio8-9</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> Fixed implicit NuGet packages being updated</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.9</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<p><strong>Fixed implicit NuGet packages being updated</strong></p>

<p>Updating all NuGet packages, from the Solution window, in a .NET Core
2.1 project would fail with an error.</p>

<p><code>
Package Microsoft.NETCore.App 2.2.8 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft NETCore.App 2.2.8 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)
</code></p>

<p>The problem was that implicitly defined (or auto-referenced) NuGet
package references were being updated when they should be ignored since
they cannot be updated. Now Visual Studio for Mac does not attempt to
update implicitly defined NuGet package references.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.8]]></title>
    <link href="http://lastexitcode.com/blog/2020/11/21/NuGetSupportInVisualStudioMac8-8/"/>
    <updated>2020-11-21T14:20:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2020/11/21/NuGetSupportInVisualStudioMac8-8</id>
    <content type="html"><![CDATA[<h2>Features</h2>

<ul>
<li> Azure DevOps NuGet package source authentication with signed in account</li>
<li> NuGet 5.8 support</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.8</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>Azure DevOps NuGet package source authentication with signed in account</h2>

<p>Visual Studio for Mac now has integrated support for accessing
<a href="https://docs.microsoft.com/en-us/azure/devops/artifacts/nuget/consume?view=azure-devops">Azure DevOps NuGet package sources</a>
using the <a href="https://docs.microsoft.com/en-us/visualstudio/mac/signing-in?view=vsmac-2019">account signed into the IDE</a>
without requiring a personal access token (PAT).</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-8/AzureDevOps-NuGetPackageSource.gif" title="&lsquo;Azure DevOps NuGet package source prompting for sign in in Visual Studio for Mac&rsquo; &lsquo;Azure DevOps NuGet package source prompting for sign in in Visual Studio for Mac&rsquo;" ></p>

<p>If you are not signed in then the
account sign in dialog will be opened when an Azure DevOps NuGet package source
is accessed that requires authentication.</p>

<h2>NuGet 5.8 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.8">NuGet 5.8.0.6860</a> is now
included with Visual Studio for Mac 8.8.</p>
]]></content>
  </entry>
  
</feed>
