<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: monodevelop | Matt Ward]]></title>
  <link href="http://lastexitcode.com/blog/categories/monodevelop/atom.xml" rel="self"/>
  <link href="http://lastexitcode.com/"/>
  <updated>2019-12-31T14:38:30+00:00</updated>
  <id>http://lastexitcode.com/</id>
  <author>
    <name><![CDATA[Matt Ward]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Project System Tools for Visual Studio for Mac]]></title>
    <link href="http://lastexitcode.com/blog/2019/12/31/ProjectSystemToolsForVisualStudioMac/"/>
    <updated>2019-12-31T12:00:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2019/12/31/ProjectSystemToolsForVisualStudioMac</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/mrward/monodevelop-project-system-tools">Project System Tools extension</a> provides
MSBuild design-time and build logging for Visual Studio for Mac.</p>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildLoggingBinLogFile.png" title="&lsquo;Build Logging window and BinLog tree view&rsquo; &lsquo;Build Logging window and BinLog tree view&rsquo;" ></p>

<p>This is based on the <a href="https://github.com/dotnet/project-system-tools">Project System Tools available for Visual Studio on Windows</a> and also re-uses code from this extension.</p>

<h2>Features</h2>

<ul>
<li>Build Logging window

<ul>
<li>Shows a list of builds and design-time builds</li>
</ul>
</li>
<li>View MSBuild log output for all builds and design-time builds</li>
<li>View MSBuild binary logs for builds

<ul>
<li>Build tab shows a tree view of the build results from the binary log</li>
<li>Target Summary tab shows target name, number of calls, timings and file location</li>
<li>Task Summary tab shows task name, number of calls, timings and file location</li>
</ul>
</li>
</ul>


<h2>Supports</h2>

<ul>
<li>Visual Studio Mac 8.1 or later.</li>
</ul>


<h2>Build Logging Window</h2>

<p>To open the Build Logging Window</p>

<ul>
<li>Select View &ndash; Pads &ndash; Build Logging</li>
</ul>


<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildLoggingWindow.png" title="&lsquo;Build Logging window&rsquo; &lsquo;Build Logging window&rsquo;" ></p>

<p>Click the green arrow to enable logging for builds and design-time builds.</p>

<p>To stop the logging click the red square.</p>

<p>To filter the targets use the combo box to restrict the items shown to builds or design time builds, or use the search on the right hand side of the window.</p>

<h2>MSBuild Log Output</h2>

<p>To open the MSBuild log output</p>

<ul>
<li>Double click the row in the Build Logging window or</li>
<li>Right click the row and select Open Log File</li>
</ul>


<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildLoggingOpenLogFileMenu.png" title="&lsquo;Open Log File context menu&rsquo; &lsquo;Open Log File context menu&rsquo;" ></p>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/MSBuildLogFile.png" title="&lsquo;MSBuild Log File&rsquo; &lsquo;MSBuild Log File&rsquo;" ></p>

<p>The verbosity of the MSBuild log output is configured in Preferences &ndash; Projects &ndash; Build &ndash; Log verbosity.</p>

<h2>MSBuild Binary Log</h2>

<p>To open a binary log file</p>

<ul>
<li>Right click the row in the Build Logging window and select Open Binary Log File</li>
</ul>


<p>Note that binary logs are only available when the project or solution is built.
Support for design-time build binary logs should be available in Visual Studio for Mac 8.5.</p>

<p>Three tabs are provided by the Project System Tools extension when a binary log file is opened.</p>

<ul>
<li>Build

<ul>
<li>Tree view of the binary log targets and tasks</li>
<li>Properties window shows more information about the selected task or target</li>
</ul>
</li>
<li>Target Summary

<ul>
<li>Target name</li>
<li>Source filename</li>
<li>Number of calls</li>
<li>Time taken</li>
<li>Percentage of total time taken</li>
</ul>
</li>
<li>Task Summary

<ul>
<li>Task name</li>
<li>Source filename</li>
<li>Number of calls</li>
<li>Time taken</li>
<li>Percentage of total time taken</li>
</ul>
</li>
</ul>


<h2>Build Tab</h2>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/MSBuildBinaryLogFileBuildTab.png" title="&lsquo;MSBuild Binary Log File &ndash; Build tab&rsquo; &lsquo;MSBuild Binary Log File &ndash; Build tab&rsquo;" ></p>

<p>The Build tab shows the run times of the targets and tasks, and whether they ran successfully.</p>

<p>Skipped tasks and targets are shown in light grey text.</p>

<p>Selecting a tree node in the Build tab will show more information about that node in the Properties window.</p>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildTabProperties.png" title="&lsquo;MSBuild Binary Log File &ndash; Build tab &ndash; Properties window&rsquo; &lsquo;MSBuild Binary Log File &ndash; Build tab &ndash; Properties window&rsquo;" ></p>

<h2>Target Summary Tab</h2>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/TargetSummaryTab.png" title="&lsquo;MSBuild Binary Log File &ndash; Target Summary tab&rsquo; &lsquo;MSBuild Binary Log File &ndash; Target Summary tab&rsquo;" ></p>

<p>Targets are shown in the order they were run and can be sorted by clicking the column headers.</p>

<h2>Task Summary Tab</h2>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/TaskSummaryTab.png" title="&lsquo;MSBuild Binary Log File &ndash; Task Summary tab&rsquo; &lsquo;MSBuild Binary Log File &ndash; Task Summary tab&rsquo;" ></p>

<p>Tasks are shown in the order they were run and can be sorted by clicking the column headers.</p>

<h2>Project System Tools Installation</h2>

<p>The Project System Tools extension is available from the Visual Studio for Mac extensions repository. To install the addin:</p>

<ul>
<li>From the main menu, open the Extensions Manager dialog.</li>
<li>Select the Gallery tab.</li>
<li>Expand IDE extensions.</li>
<li>Select Project System Tools</li>
<li>Click the Refresh button if the extension is not visible.</li>
<li>Click Installâ€¦ to install the extension.</li>
<li>Restart Visual Studio for Mac.</li>
</ul>


<h2>Links</h2>

<ul>
<li><a href="https://github.com/mrward/monodevelop-project-system-tools">Project System Tools source code &ndash; Visual Studio for Mac</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioProductTeam.ProjectSystemTools">Project System Tools Marketplace &ndash; Visual Studio on Windows</a></li>
<li><a href="https://github.com/dotnet/project-system-tools">Project System Tools source code &ndash; Visual Studio for Windows</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.3]]></title>
    <link href="http://lastexitcode.com/blog/2019/10/06/NuGetSupportInVisualStudioMac8-3/"/>
    <updated>2019-10-06T12:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2019/10/06/NuGetSupportInVisualStudioMac8-3</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 5.3 support</li>
<li> Managing NuGet packages for the solution</li>
<li> Show NuGet package updates for SDK style projects in the Solution window</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.3</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>NuGet 5.3 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.3">NuGet 5.3.0.6192</a> is now
included with Visual Studio for Mac 8.3.</p>

<h2>Managing NuGet Packages for the solution</h2>

<p>Support for managing NuGet packages for the solution was originally available in a separate
<a href="https://github.com/mrward/monodevelop-nuget-extensions">NuGet extensions addin</a>. This feature has now
been integrated into Visual Studio for Mac, along with some user interface changes, and is now available by
default.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/ManageNuGetPackagesSolutionBrowseTab.png" title="&lsquo;Manage NuGet Packages &ndash; Solution &ndash; Browse tab&rsquo; &lsquo;Manage NuGet Packages &ndash; Solution &ndash; Browse tab&rsquo;" ></p>

<p>The NuGet extensions addin is still available and provides a
NuGet Powershell Console but it no longer includes a Manage NuGet Packages dialog.</p>

<p>The Manage NuGet Packages dialog contains four tabs:</p>

<ul>
<li>Browse

<ul>
<li>Used to search for and install NuGet packages. This is equivalent to the old Add NuGet Packages dialog.</li>
</ul>
</li>
<li>Installed

<ul>
<li>Shows the installed NuGet packages. NuGet packages can be uninstalled from this tab.</li>
</ul>
</li>
<li>Updates

<ul>
<li>Shows NuGet packages that have new versions available.</li>
</ul>
</li>
<li>Consolidate

<ul>
<li>Shows NuGet packages that have multiple versions installed in the solution. This is only available when managing
NuGet packages for the solution.</li>
</ul>
</li>
</ul>


<p>The Add Packages dialog has been removed and replaced with the Manage NuGet Packages dialog since everything that was supported with the Add Packages dialog is available the new dialog.</p>

<p>To manage the NuGet packages for
the solution the Manage NuGet Packages dialog can be opened in the following ways:</p>

<ul>
<li>Right click the solution in the Solution window and select <strong>Manage NuGet Packages&hellip;</strong></li>
<li>From the main menu select <strong>Project</strong> &ndash; <strong>Manage NuGet Packages&hellip;</strong></li>
</ul>


<p>The Manage NuGet Packages dialog title is different depending on whether the NuGet packages
are being managed for the solution or for the project. When managing packages for the solution
the dialog title will be <strong>Manage NuGet Packages â€“ Solution</strong>.</p>

<h3>Managing NuGet Packages for a single project</h3>

<p>To manage NuGet packages for a single project the Manage NuGet Packages dialog can be opened
in the following ways:</p>

<ul>
<li>Right click the project in the Solution window and select <strong>Manage NuGet Packages&hellip;</strong>

<ul>
<li>This was added to make Visual Studio for Mac consistent with Visual Studio on Windows</li>
</ul>
</li>
<li>Double click the Packages folder in the Solution window</li>
<li>Right click the Packages folder and select <strong>Manage NuGet Packages&hellip;</strong></li>
<li>Double click the Dependencies folder in the Solution window.

<ul>
<li>In previous versions of Visual Studio for Mac this would not open the dialog</li>
</ul>
</li>
<li>Right click the Depdendencies folder and select <strong>Manage NuGet Packages..</strong></li>
<li>Double click the NuGet folder underneath the Dependencies folder</li>
<li>Right click the NuGet folder, underneath the Dependencies folder, and select <strong>Manage NuGet Packages&hellip;</strong></li>
</ul>


<p>When managing NuGet packages for a single project the dialog title shows the project name
<strong>Manage NuGet Packages â€“ ProjectName</strong>.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/ManageNuGetPackagesProject.png" title="&lsquo;Manage NuGet Packages for Project&rsquo; &lsquo;Manage NuGet Packages for Project&rsquo;" ></p>

<h3>Installing NuGet Packages</h3>

<p>The Browse tab in the Manage NuGet Packages can be used to search for and install NuGet packages
into one or more projects. This tab is equivalent to the old Add NuGet Packages dialog.</p>

<p>The latest stable NuGet package version is now indicated by
having <strong>(latest stable)</strong> appended on the right hand
side of the dialog.</p>

<p>To install a NuGet package into multiple projects:</p>

<ul>
<li>Right click the solution and select <strong>Manage NuGet Packages&hellip;</strong></li>
<li>Search for a NuGet package</li>
<li>Click the <strong>Add Package</strong> button</li>
<li>In the Select Projects dialog that is opened, select the projects that you want the NuGet package to be installed, and click OK</li>
</ul>


<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/ManageNuGetPackagesSolutionSelectProjects.png" title="&lsquo;Manage NuGet Packages &ndash; Select Projects dialog&rsquo; &lsquo;Manage NuGet Packages &ndash; Select Projects dialog&rsquo;" ></p>

<h3>Uninstalling NuGet Packages</h3>

<p>The Installed tab in the Manage NuGet Packages can be used to uninstall
NuGet packages from one or more projects.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/ManageNuGetPackagesInstalledTab.png" title="&lsquo;Manage NuGet Packages &ndash; Installed tab&rsquo; &lsquo;Manage NuGet Packages &ndash; Installed tab&rsquo;" ></p>

<p>To uninstall a NuGet package:</p>

<ul>
<li>Right click the solution and select <strong>Manage NuGet Packages&hellip;</strong></li>
<li>Select the Installed tab</li>
<li>Select a NuGet package to uninstall

<ul>
<li>To uninstall multiple NuGet packages use the check boxes in the package list</li>
</ul>
</li>
<li>Click the <strong>Uninstall Package</strong> button</li>
<li>In the Select Projects dialog that is opened, select the projects where the NuGet package should be removed, and click OK.</li>
</ul>


<h3>Updating NuGet Packages</h3>

<p>The Updates tab shows the updated NuGet packages available to be installed.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/ManageNuGetPackagesUpdatesTab.png" title="&lsquo;Manage NuGet Packages &ndash; Updates tab&rsquo; &lsquo;Manage NuGet Packages &ndash; Updates tab&rsquo;" ></p>

<p>The Updates tab shows the <strong>Current Version</strong> of the NuGet package installed on the right hand side of the dialog. If
multiple versions of the packages are installed across the solution, then this will
display <strong>Multiple</strong> with an information icon where information about the
projects and versions can be viewed in a tooltip.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/UpdatesTabMultipleVersions.png" title="&lsquo;Manage NuGet Packages &ndash; Updates tab &ndash; Multiple versions installed&rsquo; &lsquo;Manage NuGet Packages &ndash; Updates tab &ndash;  Multiple versions installed&rsquo;" ></p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/UpdatesTabMultipleVersionsTooltip.png" title="&lsquo;Manage NuGet Packages &ndash; Updates tab &ndash; Multiple versions installed &ndash; tooltip&rsquo; &lsquo;Manage NuGet Packages &ndash; Updates tab &ndash;  Multiple versions installed &ndash; tooltip&rsquo;" ></p>

<p>To update a NuGet package in multiple projects:</p>

<ul>
<li>Right click the solution and select <strong>Manage NuGet Packages&hellip;</strong></li>
<li>Select the Updates tab</li>
<li>Select a NuGet package to update

<ul>
<li>To update multiple NuGet packages use the check boxes in the packages list</li>
</ul>
</li>
<li>Click the <strong>Update Package</strong> button</li>
<li>In the Select Projects dialog that is opened, select the projects where the NuGet package should be updated, and click OK.</li>
</ul>


<h3>Consolidating NuGet Packages</h3>

<p>If there are different versions of a NuGet package installed in the solution the
Consolidate tab will show this and allow the packages to be consolidated to a particular version.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/ManageNuGetPackagesConsolidateTab.png" title="&lsquo;Manage NuGet Packages &ndash; Consolidate tab&rsquo; &lsquo;Manage NuGet Packages &ndash; Consolidate tab&rsquo;" ></p>

<p>When a NuGet package is selected, the right hand side of the dialog shows
all the projects in the solution. The project will be checked if it has the selected
package installed. The package version used by the project is also shown.
Projects that have a package to consolidate are shown first in the list.</p>

<p>Note that the Consolidate tab is only displayed if NuGet packages are being
managed for the solution.</p>

<p>By default the Consolidate tab will select the latest version available from the current NuGet package source.
This may be different from the latest version installed in the projects.</p>

<p>To Consolidate a NuGet package:</p>

<ul>
<li>Right click the solution and select <strong>Manage NuGet Packages&hellip;</strong></li>
<li>Select the Consolidate tab</li>
<li>Select the NuGet package you want to consolidate.

<ul>
<li>Use the check box next to the NuGet package if you want to consolidate multiple NuGet packages at the same time</li>
</ul>
</li>
<li>Check or uncheck the projects in the projects list.

<ul>
<li>By default projects that contain the selected NuGet package will be checked</li>
</ul>
</li>
<li>Click the <strong>Consolidate Package</strong> button.</li>
</ul>


<h2>Show NuGet package updates for SDK style projects in the Solution window</h2>

<p>NuGet package updates are now shown in the Solution window for SDK style
projects.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/SdkStyleProjectPackageUpdates.png" title="&lsquo;SDK style project &ndash; package updates &ndash; solution window&rsquo; &lsquo;SDK style project &ndash; package updates &ndash; solution window&rsquo;" ></p>

<p>If an updated package is available this information will now be shown
on the Dependencies folder, the NuGet folder, and the top level
package in the Solution window.</p>

<p>Previously NuGet package updates were only displayed for projects
that used a packages.config file or for non-SDK style projects
that used PackageReferences.</p>

<p>Instead of showing the updated NuGet package version text, next to the installed version
in the solution window, an update icon
is displayed with the version information available in a tooltip. This prevents
the version information taking up a lot of space to the right, which can
happen for long version numbers.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/SdkStyleProjectPackageUpdateVersionTooltip.png" title="&lsquo;SDK style project &ndash; package update version tooltip &ndash; solution window&rsquo; &lsquo;SDK style project &ndash; package update version tooltip &ndash; solution window&rsquo;" ></p>

<p>The Update menu, when right clicking a NuGet package, now shows the
version for the update. Otherwise
the Update menu is displayed.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/SdkStyleProjectUpdateToMenuItem.png" title="&lsquo;SDK style project &ndash; update menu item &ndash; solution window&rsquo; &lsquo;SDK style project &ndash; update menu item &ndash; solution window&rsquo;" ></p>

<p>If there is an update and a NuGet warning only the warning icon
will be displayed with the warning message available in the tooltip.
The update information will only be available in the right click
context menu for the NuGet package in this case.</p>

<p>Package versions are now displayed in solution window for non-SDK style projects.</p>

<p><img src="/images/blog/NuGetSupportInVisualStudioMac8-3/NonSdkStyleProjectPackageUpdates.png" title="&lsquo;Non-SDK style project &ndash; package updates &ndash; solution window&rsquo; &lsquo;Non-SDK style project &ndash; package updates &ndash; solution window&rsquo;" ></p>

<p>SDK style projects always displayed the package version in the Solution
window but non-SDK style projects did not. To make these consistent the NuGet
package version is now shown in the Solution window for all project types.</p>

<p>Previously for non-SDK style projects the package version was shown
as a menu item when right clicking a NuGet package. This has been removed
since the package version is now displayed next to the package id in the
Solution window.</p>

<h2>Bug Fixes</h2>

<p><strong>Fixed text colour when row selected in Manage NuGet Packages dialog</strong></p>

<p>When a package was checked in the Add NuGet Packages dialog any
row that was selected would display black text instead of white text. This was hard
to read with the blue background colour used for the selected row. The wrong text colour was being set when a package was
checked. This has been fixed in the Manage NuGet Packages dialog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.2]]></title>
    <link href="http://lastexitcode.com/blog/2019/07/28/NuGetSupportInVisualStudioMac8-2/"/>
    <updated>2019-07-28T12:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2019/07/28/NuGetSupportInVisualStudioMac8-2</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 5.1 support</li>
<li> Support partial installs into multi-target framework projects</li>
<li> Fixed no network error displayed in Add Packages dialog</li>
<li> Fixed restoring too many projects when target framework changed</li>
<li> Fixed adding non-sdk style project triggering NuGet restore multiple times</li>
<li> Fixed restore menu incorrectly disabled</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.2</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>NuGet 5.1 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.1-rtm">NuGet 5.1.0.6013</a> is now
included with Visual Studio for Mac 8.2.</p>

<h2>Support partial installs into multi-target framework projects</h2>

<p>A NuGet package being installed into a multi-target framework project
may not support all frameworks. When this happens the PackageReference
will now be added with a condition so the NuGet package is not used
for frameworks that are not supported.</p>

<p>```
<Project Sdk="Microsoft.NET.Sdk"></p>

<p>  <PropertyGroup></p>

<pre><code>&lt;TargetFrameworks&gt;net472;netstandard1.2&lt;/TargetFrameworks&gt;
</code></pre>

<p>  </PropertyGroup></p>

<p>  <ItemGroup Condition="'$(TargetFramework)' == 'net472'"></p>

<pre><code>&lt;PackageReference Include="EntityFramework" Version="6.2.0" /&gt;
</code></pre>

<p>  </ItemGroup>
</Project>
```</p>

<h2>Bug Fixes</h2>

<p><strong>Fixed no network error displayed in Add Packages dialog</strong></p>

<p>Networking errors were not being reported in the Add Packages dialog
resulting in no information being available explaining why there were
no search results.</p>

<p>Visual Studio for Mac uses Xamarin.Mac&rsquo;s NSUrlSessionHandler
for HTTP requests and the NSUrlSessionHandler reports errors
using curly braces. For example:</p>

<p><code>
[nuget.org] The Internet connection appears to be offline.
  Error Domain=NSURLErrorDomain Code=-1009 "The Internet connection appears to be offline." UserInfo={NSUnderlyingError=0x7fce42892a80 {Error Domain=kCFErrorDomainCFNetwork Code=-1009 "(null)" UserInfo={_kCFStreamErrorCodeKey=50, _kCFStreamErrorDomainKey=1}}, NSErrorFailingURLStringKey=https://api-v2v3search-1.nuget.org/query?q=&amp;skip=0&amp;take=26&amp;prerelease=false&amp;supportedFramework=Xamarin.iOS,Version=v1.0&amp;semVerLevel=2.0.0, NSErrorFailingURLKey=https://api-v2v3search-1.nuget.org/query?q=&amp;skip=0&amp;take=26&amp;prerelease=false&amp;supportedFramework=Xamarin.iOS,Version=v1.0&amp;semVerLevel=2.0.0, _kCFStreamErrorDomainKey=1, _kCFStreamErrorCodeKey=50, NSLocalizedDescription=The Internet connection appears to be offline.}
</code></p>

<p>This text was then being passed to string.Format in the Add Packages
dialog and was causing a FormatException. The error would then not be
displayed in the Add Packages dialog. The text now has the curly braces
escaped to prevent the FormatException.</p>

<p><strong>Fixed restoring too many projects when target framework changed</strong></p>

<p>When the target framework was changed in a SDK style project all SDK style
projects in the solution were restored. Now only the project and
projects that depend on it are restored.</p>

<p><strong>Fixed adding non-sdk style project triggering NuGet restore multiple times</strong></p>

<p>Adding a new non-sdk style project to a solution could cause a NuGet
restore to run multiple times.</p>

<p>The problem was that the SDK style projects, such as those that target
Xamarin.Mac, may change their target framework on re-evaluation. This
was causing Visual Studio for Mac
to run a restore for all SDK style projects in the solution, multiple
times. To avoid this the target framework changes during re-evaluation
are ignored.</p>

<p><strong>Fixed restore menu incorrectly disabled</strong></p>

<p>In the Solution window on right clicking a solution, or the packages folder, the restore
menu was incorrectly disabled when an SDK style project targeted .NET Framework
or when the project had its RestoreProjectStyle set to PackageReference and
had no PackageReferences.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LibMan support in Visual Studio for Mac]]></title>
    <link href="http://lastexitcode.com/blog/2019/07/13/LibManSupportInVisualStudioMac8-1/"/>
    <updated>2019-07-13T12:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2019/07/13/LibManSupportInVisualStudioMac8-1</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/mrward/LibraryManager">Library Manager addin</a> provides
Microsoft Library Manager (LibMan) support for Visual Studio for Mac. LibMan provides a way to install
third-party client-side JavaScript libraries for ASP.NET Core and ASP.NET projects.</p>

<h2>Features</h2>

<ul>
<li>Add Client-Side Library dialog</li>
<li>Restore client-side libraries</li>
<li>Deleting client-side libraries</li>
<li>Automatic client-side library restore on saving libman.json file</li>
</ul>


<p>Full text editor support is not currently available. The following text editor quick actions are not supported:</p>

<ul>
<li>Uninstall a client-side library</li>
<li>Check for client-side library updates</li>
</ul>


<h2>Supports</h2>

<ul>
<li>Visual Studio Mac 8.1 or later.</li>
<li>ASP.NET Core and ASP.NET projects</li>
</ul>


<h2>Add Client-Side Library Dialog</h2>

<p>To open the Add Client-Side Library dialog, right click the project, or a folder, and select Add &ndash; Client-Side Library.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/AddClientSideLibraryMenuItem.png" title="&lsquo;Add &ndash; Client-Side Library menu&rsquo; &lsquo;Add &ndash; Client-Side Library menu&rsquo;" ></p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/AddClientSideLibraryDialog.png" title="&lsquo;Add Client-Side Library dialog&rsquo; &lsquo;Add Client-Side Library dialog&rsquo;" ></p>

<p>The library provider can be selected from the Provider list.</p>

<p>Typing in the Library text field will search the library provider and show a list of matching libraries.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/AddClientSideLibraryDialogCompletion.png" title="&lsquo;Add Client-Side Library dialog completion list&rsquo; &lsquo;Add Client-Side Library dialog completion list&rsquo;" ></p>

<p>Pressing tab or return will insert the selected library from the completion list into the Library text field.</p>

<p>You can then choose to include all the client-side library files or a selection of those files.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/AddClientSideLibraryDialogSelectFiles.png" title="&lsquo;Add Client-Side Library dialog select files&rsquo; &lsquo;Add Client-Side Library dialog select files&rsquo;" ></p>

<p>The Target Location indicates where the client-side library files will be installed.</p>

<p>Clicking the Install button will create a libman.json file and install the client-side library into your project.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/LibManJQueryInstalledInProject.png" title="&lsquo;jQuery installed into project&rsquo; &lsquo;jQuery installed into project&rsquo;" ></p>

<p>More detailed information about the client-side library installation is available by clicking the status bar or by selecting
View &ndash; Pads &ndash; Library Manager Output.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/LibraryManagerOutputWindow.png" title="&lsquo;Library Manager Output window&rsquo; &lsquo;Library Manager Output window&rsquo;" ></p>

<h2>Adding a libman.json file</h2>

<p>To add a libman.json file without using the Add Client-Side Library dialog, right click the ASP.NET project and select
Manage Client-Side Libraries.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/ManageClientSideLibrariesMenu.png" title="&lsquo;Manage Client-Side Libraries menu&rsquo; &lsquo;Manage Client-Side Libraries menu&rsquo;" ></p>

<p>This will create a libman.json file and open it in the text editor.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/LibManFileInTextEditor.png" title="&lsquo;libman.json file in text editor&rsquo; &lsquo;libman.json file in text editor&rsquo;" ></p>

<h2>Restoring Client-Side Libraries</h2>

<p>To restore the client-side libraries you can right click the libman.json file in the Solution window and
select Restore Client-Side Libraries.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/RestoreClientSideLibraries.png" title="&lsquo;Restore Client-Side Libraries menu&rsquo; &lsquo;Restore Client-Side Libraries menu&rsquo;" ></p>

<p>Information about the restore operation is available from the Library Manager Output window.</p>

<p>Alternatively saving the libman.json file in the text editor will run a restore.</p>

<p>Restore errors are displayed in the Errors window and in the libman.json file if it is open in the text editor.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/LibManRestoreError.png" title="&lsquo;LibMan restore error&rsquo; &lsquo;LibMan restore error&rsquo;" ></p>

<h2>Deleting Client-Side Libraries</h2>

<p>To remove the client-side libraries you can right click the libman.json file in the Solution window and
select Clean Client-Side Libraries.</p>

<p><img src="/images/blog/LibManSupportInVisualStudioMac8-1/CleanClientSideLibrariesMenu.png" title="&lsquo;Clean Client-Side Libraries menu&rsquo; &lsquo;Clean Client-Side Libraries menu&rsquo;" ></p>

<p>This will delete the client-side libraries from the project.</p>

<h2>Library Manager Addin Installation</h2>

<p>The Library Manager addin is available from the Visual Studio for Mac extensions repository. To install the addin:</p>

<ul>
<li>From the main menu, open the Extensions Manager dialog.</li>
<li>Select the Gallery tab.</li>
<li>Expand IDE extensions.</li>
<li>Select the Library Manager addin</li>
<li>Click the Refresh button if the addin is not visible.</li>
<li>Click Installâ€¦ to install the addin.</li>
<li>Restart Visual Studio for Mac.</li>
</ul>


<h2>Links</h2>

<ul>
<li><a href="https://github.com/mrward/LibraryManager">Library Manager for Visual Studio for Mac</a></li>
<li><a href="https://docs.microsoft.com/en-us/aspnet/core/client-side/libman/libman-vs">Use LibMan with ASP.NET Core in Visual Studio</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.1]]></title>
    <link href="http://lastexitcode.com/blog/2019/06/22/NuGetSupportInVisualStudioMac8-1/"/>
    <updated>2019-06-22T12:40:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2019/06/22/NuGetSupportInVisualStudioMac8-1</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 5.0 support</li>
<li> Fixed PackageReference metadata not added for development dependencies</li>
<li> Fixed DotNetCliToolReferences not being restored</li>
<li> Fixed Multiplatform Library build error with Android projects</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.1</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>NuGet 5.0 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.0-rtm">NuGet 5.0.2.5988</a> is now
included with Visual Studio for Mac 8.1.</p>

<h2>Bug Fixes</h2>

<p><strong>Fixed PackageReference metadata not added for development dependencies</strong></p>

<p>Installing a NuGet package that is a development dependency, such as
GitInfo, would not add the PrivateAssets nor the IncludeAssets
metadata to the PackageReference. This is now supported and mirrors the
behaviour of &lsquo;dotnet add package&rsquo; and Visual Studio on Windows.</p>

<p><strong>Fixed DotNetCliToolReferences not being restored</strong></p>

<p>DotNetCliToolReferences are available in the package dependency graph
but are treated as separate projects in this graph. Since these did not map
to an existing project in the solution they were not added to the full dependency
graph which resulted in these tools not being restored.</p>

<p>DotNetCliToolReferences are only restored when the entire solution is restored.
Restoring a single project only restores the project itself not
the dotnet cli tool project referenced by the project.</p>

<p>MSBuild supports restoring DotNetCliToolReferences in any project type that
uses PackageReferences so Visual Studio for Mac also supports this.</p>

<p><strong>Fixed Multiplatform Library build error with Android projects</strong></p>

<p>When generating a Portable Class Library (PCL) assembly from the intersection of project
assemblies the ApiIntersect build task would throw an exception since
it could not resolve the Mono.Android assembly. This problem has been
fixed in a more recent NuGet.Build.Packaging where the failure to
resolve has been converted to a warning.</p>

<p>```
System.Exception: Could not resolve Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065</p>

<pre><code>at ApiIntersect.FrameworkAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x0001b] in &lt;aac3e0d5bcd4473a96e385115da49b96&gt;:0
at ApiIntersect.FrameworkAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name) [0x00000] in &lt;aac3e0d5bcd4473a96e385115da49b96&gt;:0
at ICSharpCode.Decompiler.Ast.Transforms.IntroduceUsingDeclarations.Run (ICSharpCode.NRefactory.CSharp.AstNode compilationUnit) [0x00142] in &lt;37b5ad8a7a94479fbc5b574a8fc6281a&gt;:0
at ICSharpCode.Decompiler.Ast.Transforms.TransformationPipeline.RunTransformationsUntil (ICSharpCode.NRefactory.CSharp.AstNode node, System.Predicate`1[T] abortCondition, ICSharpCode.Decompiler.DecompilerContext context) [0x0002c] in &lt;37b5ad8a7a94479fbc5b574a8fc6281a&gt;:0
at ICSharpCode.Decompiler.Ast.AstBuilder.RunTransformations (System.Predicate`1[T] transformAbortCondition) [0x00000] in &lt;37b5ad8a7a94479fbc5b574a8fc6281a&gt;:0
at ICSharpCode.Decompiler.Ast.AstBuilder.RunTransformations () [0x00000] in &lt;37b5ad8a7a94479fbc5b574a8fc6281a&gt;:0
at ApiIntersect.MainClass.DumpTypes (System.Collections.Generic.List`1[T] types, System.String baseDir) [0x000a7] in &lt;aac3e0d5bcd4473a96e385115da49b96&gt;:0
at ApiIntersect.MainClass.Process (System.Collections.Generic.List`1[T] intersections, System.Collections.Generic.List`1[T] exclusions, Mono.Cecil.ReaderParameters readerParameters, System.String outputPath) [0x00319] in &lt;aac3e0d5bcd4473a96e385115da49b96&gt;:0
at ApiIntersect.MainClass.Main (System.String[] args) [0x0039f] in &lt;aac3e0d5bcd4473a96e385115da49b96&gt;:0
</code></pre>

<p>```</p>

<p>An updated NuGet.Build.Packaging has not been published to nuget.org
so only new projects created with Visual Studio for Mac will get the
NuGet package containing the fix.</p>
]]></content>
  </entry>
  
</feed>
