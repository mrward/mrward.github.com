<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nuget | Matt Ward]]></title>
  <link href="http://lastexitcode.com/blog/categories/nuget/atom.xml" rel="self"/>
  <link href="http://lastexitcode.com/"/>
  <updated>2016-01-01T15:41:47+00:00</updated>
  <id>http://lastexitcode.com/</id>
  <author>
    <name><![CDATA[Matt Ward]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Xamarin Studio 5.10]]></title>
    <link href="http://lastexitcode.com/blog/2015/11/22/NuGetSupportInXamarinStudio5-10/"/>
    <updated>2015-11-22T12:00:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2015/11/22/NuGetSupportInXamarinStudio5-10</id>
    <content type="html"><![CDATA[<p>Xamarin Studio 5.10 was released last week as part of the <a href="https://blog.xamarin.com/introducing-xamarin-4/">Xamarin 4 release</a> and it includes changes to the NuGet support.</p>

<h2>Changes</h2>

<ul>
<li> Support NuGet 2.8.7.</li>
<li> Open readme.txt when a NuGet package is installed.</li>
<li> Support packages.config file named after the project.</li>
<li> Local Copy settings are preserved for references when updating packages.</li>
<li> Do not show Checking for package updates message in status bar.</li>
<li> Do not show warning in the status bar if a NuGet package has PowerShell scripts.</li>
<li> Prevent the solution being closed when NuGet packages are being added.</li>
<li> Removing a NuGet package does not update the Solution window when multiple solutions are open.</li>
<li> Prevent packages.config file being marked as deleted by Git after updating a pre-release NuGet package.</li>
<li> Prevent retargeting a NuGet package marking packages.config as deleted by Git.</li>
<li> Allow Microsoft.ApplicationInsights NuGet package to be installed.</li>
</ul>


<p>More information on all the changes in Xamarin Studio 5.10 can be found in the <a href="http://developer.xamarin.com/releases/studio/xamarin.studio_5.10/xamarin.studio_5.10/">release notes</a>.</p>

<h2>NuGet 2.8.7 support</h2>

<p>Xamarin Studio now supports NuGet 2.8.7. NuGet 2.8.7 adds support for the Universal App Platform (UAP) target framework to support Windows 10 Application Development.</p>

<h2>Open readme.txt when a NuGet package is installed</h2>

<p>A NuGet package can contain a <a href="https://docs.nuget.org/create/creating-and-publishing-a-package#user-content-automatically-displaying-a-readmetxt-file-during-package-installation">readme.txt file</a> which Xamarin Studio will now open and display in the text editor when the NuGet package is installed or updated.</p>

<h2>Preserve Local Copy on Updating Packages</h2>

<p>The Local Copy setting on an assembly reference will now be preserved when updating a NuGet package or retargeting a NuGet package.</p>

<p>By default Local Copy is set to true for assembly references when installing a NuGet package. If you set Local Copy to false for one or more of these references then this setting will now be preserved when updating or retargeting the NuGet package.</p>

<h2>Packages.config file named after project</h2>

<p>NuGet supports multiple projects in the same directory each using their own packages.config file. To allow multiple projects in the same directory to each use their own NuGet packages you can name the packages.config file after each project. In the examples below the project filename is on the left and the corresponding packages.config filename is on the right.</p>

<ul>
<li>Foo.csproj => packages.Foo.config</li>
<li>Bar.csproj => packages.Bar.config</li>
<li>Foo Bar.csproj => packages.Foo_Bar.config</li>
</ul>


<p>Xamarin Studio now checks for the packages.ProjectName.config file first and will use it if it exists, otherwise it will fall back to the default behaviour and use the packages.config file.</p>

<p>Note that a new project without any NuGet packages will use a packages.config file by default. The basic procedure to enable a project specific packages.config file when creating a new project is:</p>

<ol>
<li>Create new project called Foo.</li>
<li>Add a NuGet package to the Foo project.</li>
<li>Rename the packages.config file to packages.Foo.config</li>
<li>Reload the solution in Xamarin Studio.</li>
</ol>


<p>Also note that if you remove all the NuGet packages from a project the packages.ProjectName.config file will be deleted and on adding a new NuGet package the default packages.config file will be used.</p>

<h2>Do not show Checking for package updates message in status bar</h2>

<p>Previously when Xamarin Studio was checking for NuGet package updates a message would appear in the status bar. This status bar message has now been removed since checking for NuGet package updates is a background task and does not prevent Xamarin Studio from being used.</p>

<h2>Do not show warning in the status bar if a NuGet package has PowerShell scripts</h2>

<p>Previously if a NuGet package was installed and it contained PowerShell scripts then a warning was shown in the status bar. Now this message is only shown in the Package Console window.</p>

<h2>Prevent the solution being closed when NuGet packages are being added</h2>

<p>A check is now made when Xamarin Studio is closed to see if NuGet packages are still being installed. If this is the case then a dialog will be displayed indicating that it is not currently possible to close Xamarin Studio allowing the NuGet package to finish installing.</p>

<h2>Bug Fixes</h2>

<p><strong>Removing a NuGet package does not update the Solution window when multiple solutions are open</strong></p>

<p>With two or more solutions opened at the same time the Packages folder would not be updated for all solutions when a NuGet package was removed. This was because Xamarin Studio was not refreshing the Packages folder for all solutions currently open.</p>

<p><strong>Prevent packages.config file being marked as deleted by Git after updating pre-release NuGet package.</strong></p>

<p>If there was only one pre-release NuGet package installed into a project and then a later version of the NuGet package was installed from the Add Packages dialog then the packages.config file was then being shown as deleted by Git instead of modified.</p>

<p>The packages.config file is deleted by NuGet after the old NuGet package is uninstalled if there are no NuGet packages referenced. A special case to handle this was added in Xamarin Studio 5.3 but that only handled updating a NuGet package from the Solution window. Now updating a pre-release from the Add Packages dialog is also handled.</p>

<p><strong>Retargeting a NuGet package marks packages.config as deleted by Git</strong></p>

<p>This is similar to the previous bug. Retargeting a NuGet package will uninstall and then install the NuGet package. If there is only one NuGet package in the project then the packages.config file is deleted and was causing Git to mark the file as deleted instead of updated.</p>

<p><strong>Unable to install Microsoft.ApplicationInsights NuGet package</strong></p>

<p>Xamarin Studio 5.9.2 added support for NuGet 2.8.5 but it was not possible to install the <a href="https://www.nuget.org/packages/Microsoft.ApplicationInsights/">Microsoft.ApplicationInsights NuGet package</a> into a project. It was possible to install it using Visual Studio with NuGet 2.8.3 or higher installed. The error reported by Xamarin Studio was:</p>

<pre><code>Adding Microsoft.ApplicationInsights...
The 'Microsoft.ApplicationInsights' package requires NuGet client version '2.8.50313' or above, but the current NuGet version is '2.8.5.0'.
</code></pre>

<p>Xamarin Studio 5.10 now allows the Microsoft.ApplicationInsights NuGet package to be installed into a project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Xamarin Studio 5.9.2]]></title>
    <link href="http://lastexitcode.com/blog/2015/06/07/NuGetSupportInXamarinStudio5-9-2/"/>
    <updated>2015-06-07T10:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2015/06/07/NuGetSupportInXamarinStudio5-9-2</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 2.8.5 support</li>
<li> NuGet warning and error messages in Status Bar</li>
</ul>


<p>More information on all the changes in Xamarin Studio 5.9.2 can be found in the <a href="http://developer.xamarin.com/releases/studio/xamarin.studio_5.9/xamarin.studio_5.9/">release notes</a>.</p>

<h2>NuGet 2.8.5 support</h2>

<p>Xamarin Studio now supports NuGet 2.8.5.</p>

<p>NuGet 2.8.5 adds support for three new .NET target frameworks: DNX, DNXCore and Core.</p>

<p>With NuGet 2.8.5 supported you can now install the <a href="https://www.nuget.org/packages/xunit/2.1.0-beta2-build2981">latest pre-release version of xUnit</a>.</p>

<h2>NuGet warning and error messages in Status Bar.</h2>

<p>Xamarin Studio 5.9 has a new native Status Bar on the Mac. This new Status Bar has a smaller width so the NuGet warning and error messages could be too long to be displayed. The screenshots below show a NuGet warning and error message in Xamarin Studio 5.9 that do not fit in the Status Bar.</p>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-9-2/NuGetWarningMessageTruncatedInStatusBar.png" title="&lsquo;NuGet warning message truncated in status bar&rsquo; &lsquo;NuGet warning message truncated in status bar&rsquo;" ></p>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-9-2/NuGetErrorMessageTruncatedInStatusBar.png" title="&lsquo;NuGet error message truncated in status bar&rsquo; &lsquo;NuGet error message truncated in status bar&rsquo;" ></p>

<p>In Xamarin Studio 5.9.2 the NuGet Status Bar messages have been shortened so they can be displayed in the new Status Bar without being truncated. The screenshots below show the new format of the NuGet warning and error messages shown in the Status Bar.</p>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-9-2/NuGetShortenedWarningMessageInStatusBar.png" title="&lsquo;Shortened NuGet warning message in status bar&rsquo; &lsquo;Shortened NuGet warning message in status bar&rsquo;" ></p>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-9-2/NuGetShortenedErrorMessageInStatusBar.png" title="&lsquo;Shortened NuGet error message in status bar&rsquo; &lsquo;Shortened NuGet error message in status bar&rsquo;" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Xamarin Studio 5.9]]></title>
    <link href="http://lastexitcode.com/blog/2015/05/03/NuGetSupportInXamarinStudio5-9/"/>
    <updated>2015-05-03T14:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2015/05/03/NuGetSupportInXamarinStudio5-9</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 2.8.3 support</li>
<li> Always show Packages folder in Solution window</li>
<li> Target framework change detected on project reload</li>
</ul>


<p>More information on all the new features and changes in Xamarin Studio 5.9 can be found in the <a href="http://developer.xamarin.com/releases/studio/xamarin.studio_5.9/xamarin.studio_5.9/">release notes</a>.</p>

<h2>NuGet 2.8.3 support</h2>

<p>Xamarin Studio now supports NuGet 2.8.3. This allows a NuGet package to target NuGet 2.8.3 explicitly. For example the PCLStorage 1.0.1 NuGet package will not install into Xamarin Studio 5.8, since it requires NuGet 2.8.3, but will install into Xamarin Studio 5.9.</p>

<p>NuGet packages, such as xunit, that target the new ASP.NET target frameworks, ASP.NetCore 5.0 and ASP.Net 5.0, can now be installed into Xamarin Studio now that it supports NuGet 2.8.3. Previously you would see an error message in the Package Console window:</p>

<pre><code>'xunit.core' already has a dependency defined for 'xunit.extensibility.core'.
</code></pre>

<p>Support for NuGet 2.8.5 is planned for Xamarin Studio 5.9.1.</p>

<h2>Always Show Packages Folder in Solution window</h2>

<p>The Packages folder is now always shown in the Solution window even if the project has no NuGet packages. Previously the Packages folder would only be shown if one or more NuGet packages were installed in a project.</p>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-9/PackagesFolderInSolutionWindow.png" title="&lsquo;Packages folder in Solution window&rsquo; &lsquo;Packages folder in Solution window&rsquo; &lsquo;&rsquo;" ></p>

<h2>Target Framework Change Detected on Project Reload</h2>

<p>Xamarin Studio will detect a project file has been changed outside of Xamarin Studio and will reload the project. Now Xamarin Studio on reloading will detect the project&rsquo;s target framework has been changed and will  check the NuGet packages are compatible with the new target framework. Previously Xamarin Studio would only check the compatibility of NuGet packages if the target framework was changed from within Xamarin Studio via the project options.</p>

<p>This allows Xamarin Studio to check the NuGet packages are compatible when an iOS Classic project is converted to an iOS Unified project using Xamarin Studio&rsquo;s migration tool. The NuGet packages, such as Xamarin.Forms, can then be retargeted by Xamarin Studio using the <a href="blog/2014/08/10/NuGetSupportInXamarinStudio5-2/">Retarget menu</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Xamarin Studio 5.8]]></title>
    <link href="http://lastexitcode.com/blog/2015/03/21/NuGetSupportInXamarinStudio5-8/"/>
    <updated>2015-03-21T12:00:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2015/03/21/NuGetSupportInXamarinStudio5-8</id>
    <content type="html"><![CDATA[<p>Xamarin Studio 5.8 <a href="http://blog.xamarin.com/xamarin-releases-watch-kit-support-like-clockwork/">added support for Apple&rsquo;s Watch Kit</a> and it also includes some NuGet bug fixes.</p>

<h2>Bug Fixes</h2>

<ul>
<li> Allow ASP.NET project templates to work offline.</li>
<li> Build error after updating Xamarin.Forms in a project created by Visual Studio</li>
<li> Custom MSBuild task not updated after updating Xamarin.Forms</li>
<li> Update information in the Solution window incorrect after updating packages</li>
<li> Check for package updates continues after closing a solution</li>
<li> Check for package updates prevents packages from being removed</li>
<li> Incorrect error message displayed when checking for package updates</li>
<li> Exception when checking for package updates after changing target framework of a project</li>
</ul>


<p>More information on all the new features and changes in Xamarin Studio 5.8 can be found in the <a href="http://developer.xamarin.com/releases/studio/xamarin.studio_5.8/xamarin.studio_5.8/">release notes</a>.</p>

<p><strong>Allow ASP.NET project templates to work offline</strong></p>

<p>Previously it was not possible to create an ASP.NET project without an internet connection even if all the NuGet packages were available in the local machine&rsquo;s NuGet packages cache.</p>

<p>Now the local machine&rsquo;s NuGet cache is used as the primary source of packages for project templates so it is possible to create an ASP.NET project without an internet connection if the NuGet packages are already in this cache.</p>

<p>This problem did not affect project templates, such as Xamarin.Forms, which include the NuGet packages with their project templates.</p>

<p><strong>Build error after updating Xamarin.Forms in a project created by Visual Studio</strong></p>

<p>When a NuGet package that uses custom MSBuild targets file, such as Xamarin.Forms, is added to a project by Visual Studio the project file has an extra Target added, as shown below.</p>

<pre><code>&lt;Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild"&gt;
  &lt;PropertyGroup&gt;
    &lt;ErrorText&gt;This project references NuGet package(s) that are missing on this computer.
Enable NuGet Package Restore to download them.  For more information, see
http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.&lt;/ErrorText&gt;
  &lt;/PropertyGroup&gt;
  &lt;Error Condition="!Exists('packages\Xamarin.Forms.1.2.1.6229\build\portable-win+net45+wp80+MonoAndroid10+MonoTouch10\Xamarin.Forms.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\Xamarin.Forms.1.2.1.6229\build\portable-win+net45+wp80+MonoAndroid10+MonoTouch10\Xamarin.Forms.targets'))" /&gt;
&lt;/Target&gt;
</code></pre>

<p>When the project was opened in a previous version of Xamarin Studio, and the NuGet package is updated or removed, the Error task was not updated. The project would then fail to compile with an error being reported that the old .targets file could not be found.</p>

<p>Now when updating or removing a NuGet package the EnsureNuGetPackageBuildImports target is
checked and the matching Error task will be removed. If there are no remaining Error tasks then the EnsureNuGetPackageBuildImports target is also removed. This prevents build errors after updating or uninstalling the old
NuGet package from the project.</p>

<p>Note that Xamarin Studio will not add an EnsureNuGetPackageBuildImports target and will not add Error tasks to a project when a NuGet package is added or updated.</p>

<p><strong>Custom MSBuild task not updated after updating Xamarin.Forms</strong></p>

<p>If a project that had a reference to Xamarin.Forms was compiled once, then the NuGet package was updated, the old MSBuild task was still being used when compiling.</p>

<p>For Xamarin.Forms this could cause a &ldquo;XamlG Task failed unexpectedly&rdquo; build error to be reported. Also the Package Console would report not being able to access the Xamarin.Forms.Build.Tasks.dll when updating or removing the NuGet package.</p>

<p>The problem was that MonoDevelop.Projects.Formats.MSBuild.exe that compiles the project would lock the MSBuild task assembly.</p>

<p>Now when an MSBuild import is removed on updating a NuGet package Xamarin Studio will dispose the current project builder which will shutdown the MonoDevelop.Projects.Formats.MSBuild.exe process. This unlocks any custom MSBuild task assemblies loaded by this process,
allowing the old NuGet package to be removed without any access denied errors, and when the project is recompiled again it will use the correct MSBuild task assembly.</p>

<p><strong>Update information in the Solution window incorrect after updating packages</strong></p>

<p>With check for updates enabled in Preferences, when an ASP.NET project is created, updates are shown as available for several packages. When
the packages are updated the Solution window would still show updates as being available even though the packages had been updated.</p>

<p>The problem was that a change was made in Xamarin Studio 5.7 to update package dependencies at the same time as the package was updated. This meant that an update event was not fired for each
package being updated which would result in some package updates being shown as available in the Solution window even when they had been updated.</p>

<p>Now Xamarin Studio will check all package references when a package is updated so if any package dependencies are updated the Solution
window will show the correct status of the packages.</p>

<p><strong>Check for package updates continues after closing a solution</strong></p>

<p>Xamarin Studio will now stop checking for package updates when the current solution is closed. Previously this would continue until the check was completed.</p>

<p><strong>Check for updates prevents packages from being removed</strong></p>

<p>Previously when Xamarin Studio was checking for package updates all other NuGet actions, such as updating, adding or removing packages, would not be run until the check for updates had completed.
Now the check for NuGet package updates is done on a separate thread so other NuGet actions can be run at the same time.</p>

<p><strong>Incorrect error message displayed when checking for package updates</strong></p>

<p>The Package Console would sometimes show the error message &ldquo;An exception was thrown while dispatching a method call in the UI thread.&rdquo; instead of the underlying error making it difficult to determine the cause of the problem.
For example if there was a zero byte sized .nupkg file in the solution&rsquo;s package directory, and check for updates is enabled, then
the wrong error was displayed in the Package Console.</p>

<p><strong>Exception when checking for package updates after changing target framework of a project</strong></p>

<p>Previously a null reference exception would be reported in the Package console window when doing the following:</p>

<ol>
<li> Create a project with one NuGet package added.</li>
<li> Create two NuGet package sources in Preferences. Disable all other package sources.</li>
<li> Open the Add Packages dialog and select All Sources.</li>
<li> Go back to Preferences and uncheck both of the package sources.</li>
<li> Change the target framework of the project in the project options.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Xamarin Studio 5.7]]></title>
    <link href="http://lastexitcode.com/blog/2015/01/18/NuGetSupportInXamarinStudio5-7/"/>
    <updated>2015-01-18T12:00:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2015/01/18/NuGetSupportInXamarinStudio5-7</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet menus renamed to make them easier to discover</li>
<li> Solution window icons made consistent</li>
<li> Fix build errors after MSBuild target restored for package</li>
<li> Fix types imported by MSBuild target not recognised after NuGet package installed</li>
<li> Fix Solution window cannot be opened when access to NuGet.Config is denied</li>
<li> Fix updating all packages not updating dependencies</li>
<li> Fix pre-release NuGet package being downgraded on update</li>
</ul>


<p>More information on all the new features and changes in Xamarin Studio 5.7 can be found in the <a href="http://developer.xamarin.com/releases/studio/xamarin.studio_5.7/xamarin.studio_5.7/">release notes</a>.</p>

<h2>NuGet menus renamed</h2>

<p>The menus have been changed so they now include the word NuGet to make them easier to discover.</p>

<h3>Project menu</h3>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/ProjectMenuNuGetMenuItems.png" title="&lsquo;NuGet menu items in the main Project menu&rsquo; &lsquo;NuGet menu items in the main Project menu&rsquo; &lsquo;&rsquo;" ></p>

<h3>Solution context menu</h3>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/SolutionContextMenuNuGetMenuItems.png" title="&lsquo;NuGet menu items in the Solution context menu&rsquo; &lsquo;NuGet menu items in the Solution context menu&rsquo; &lsquo;&rsquo;" ></p>

<h3>Project context menu</h3>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/ProjectContextMenuNuGetMenuItems.png" title="&lsquo;NuGet menu items in the Project context menu&rsquo; &lsquo;NuGet menu items in the Project context menu&rsquo; &lsquo;&rsquo;" ></p>

<h2>Solution Window</h2>

<p>The warning icon used in the Solution window has been changed so it is consistent with other Solution window items.</p>

<h3>Package not restored</h3>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/SolutionWindowNuGetPackageMissing.png" title="&lsquo;Solution Window &ndash; NuGet package not restored&rsquo; &lsquo;Solution Window &ndash; NuGet package not restored&rsquo;" ></p>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/SolutionWindowNuGetPackageMissingWithTooltip.png" title="&lsquo;Solution Window &ndash; NuGet package not restored with tooltip&rsquo; &lsquo;Solution Window &ndash; NuGet package not restored with tooltip&rsquo;" ></p>

<p>A new warning icon is used for packages that are not restored, the text is greyed out and hovering over the warning icon shows information about the warning.</p>

<h3>Package installing</h3>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/SolutionWindowNuGetPackageInstalling.png" title="&lsquo;Solution Window &ndash; NuGet package installing&rsquo; &lsquo;Solution Window &ndash; NuGet package installing&rsquo;" ></p>

<p>When a package is being installed the text is greyed out to indicate that the package is not currently available in the project and the text shows (installing) to distinguish between a package being installed and a package that is not restored.</p>

<h3>Package needs retargeting</h3>

<p><img src="/images/blog/NuGetSupportInXamarinStudio5-7/SolutionWindowNuGetPackageNeedsRetargetingWithTooltip.png" title="&lsquo;Solution Window &ndash; NuGet package needs retargeting&rsquo; &lsquo;Solution Window &ndash; NuGet package needs retargeting&rsquo;" ></p>

<p>A new warning icon is used for packages that need retargeting. The package id text has changed to black text instead of orange. Hovering over warning icon shows a message that the package needs retargeting.</p>

<h2>Bug Fixes</h2>

<p><strong>Build errors after MSBuild target restored for package</strong></p>

<p>If a NuGet package had an MSBuild target that added extra references to the project then on restoring the
NuGet package those references were still unavailable and the build would still fail.</p>

<p>This problem occurs with the MonoGame.Binaries NuGet package. The MonoGame.Binaries NuGet package has a custom MSBuild .targets file that adds extra references:</p>

<pre><code>&lt;Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
  &lt;ItemGroup&gt;
    &lt;Reference Include="MonoGame.Framework"&gt;
      &lt;HintPath&gt;$(MSBuildThisFileDirectory)\MonoGame.Framework.dll&lt;/HintPath&gt;
    &lt;/Reference&gt;
    &lt;Reference Include="Tao.Sdl"&gt;
      &lt;HintPath&gt;$(MSBuildThisFileDirectory)\Tao.Sdl.dll&lt;/HintPath&gt;
    &lt;/Reference&gt;
    &lt;Reference Include="OpenTK"&gt;
      &lt;HintPath&gt;$(MSBuildThisFileDirectory)\OpenTK.dll&lt;/HintPath&gt;
    &lt;/Reference&gt;
  &lt;/ItemGroup&gt;
&lt;/Project&gt;
</code></pre>

<p>If the MonoGame.Binaries NuGet package is not available on opening the
project in Xamarin Studio the project will fail to build after
restoring the NuGet package since the references in the MSBuild targets file were not being refreshed.</p>

<p>Now after a NuGet package restore the MSBuild host used by Xamarin Studio is
refreshed which allows the references in the MSBuild targets file to be found and the project to compile without any build errors.</p>

<p><strong>Types imported by MSBuild target not recognised after NuGet package installed</strong></p>

<p>If a NuGet package had an MSBuild target that added extra references to the project then on installing the
NuGet package the types from those references were still unavailable to Xamarin Studio and would be highlighted in red
in the text editor. To fix this the solution had to be closed and re-opened. This problem occurs with the MonoGame.Binaries NuGet package.</p>

<p>Now after a NuGet package is installed and it contains a MSBuild targets
file then Xamarin Studio&rsquo;s type system will be refreshed for that project. The
types will then be known by Xamarin Studio and no longer be highlighted in red in the text editor.</p>

<p><strong>Solution window cannot be opened when access to NuGet.Config is denied</strong></p>

<p>If the NuGet directory containing the NuGet.Config file cannot be created or read by NuGet then an exception is thrown. This exception was not being handled by Xamarin Studio and would prevent the
solution window from opening.</p>

<p>Now if there is any error creating this
directory, or trying to load the NuGet.Config file, then the exception is caught which allows the Solution window to open. If the NuGet directory containing the NuGet.Config file cannot be created then it will not be possible to use NuGet in Xamarin Studio but it will not prevent the solution pad from being used.</p>

<p><strong>Updating all packages not updating dependencies</strong></p>

<p>Updating NuGet packages for the entire solution would not install the Xamarin.Android.Support.v13 NuGet package which was added as a new dependency to the Xamarin.Android.Support.v4 NuGet package.</p>

<p>The problem was that the NuGet package update was not configured to update any
NuGet package dependencies when updating all packages in the solution.
Updating all packages in the project or the NuGet package individually
would update package dependencies correctly.</p>

<p>Note that this fix has introduced a bug where Xamarin Studio will show updates as available even though the updates have just been installed for the solution. This new bug should be fixed in Xamarin Studio 5.8.</p>

<p><strong>Pre-release NuGet package being downgraded on update</strong></p>

<p>When a pre-release NuGet package was installed that was newer than the latest stable NuGet package available then updating the package would install the stable version even though it was a lower version. Now an explicit check is made to ensure that an older NuGet package is not being installed.</p>
]]></content>
  </entry>
  
</feed>
