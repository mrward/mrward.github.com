<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: xamarin | Matt Ward]]></title>
  <link href="http://lastexitcode.com/blog/categories/xamarin/atom.xml" rel="self"/>
  <link href="http://lastexitcode.com/"/>
  <updated>2020-05-25T11:11:34+01:00</updated>
  <id>http://lastexitcode.com/</id>
  <author>
    <name><![CDATA[Matt Ward]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.6]]></title>
    <link href="http://lastexitcode.com/blog/2020/05/25/NuGetSupportInVisualStudioMac8-6/"/>
    <updated>2020-05-25T10:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2020/05/25/NuGetSupportInVisualStudioMac8-6</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 5.6 support</li>
<li> Fixed escape key not closing Manage NuGet Packages dialog</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.6</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>NuGet 5.6 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.6">NuGet 5.6.0.6591</a> is now
included with Visual Studio for Mac 8.6.</p>

<h2>Bug Fixes</h2>

<p><strong>Fixed escape key not closing Manage NuGet Packages dialog</strong></p>

<p>When the search text box had focus pressing the escape key would
not close the Manage NuGet Packages dialog as it did in previous
versions. A change to fix accessibility of the search text box
broke the original behaviour of the dialog.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage Global NuGet Folders for Visual Studio for Mac]]></title>
    <link href="http://lastexitcode.com/blog/2020/04/11/ManageGlobalNuGetFoldersForVisualStudioMac/"/>
    <updated>2020-04-11T12:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2020/04/11/ManageGlobalNuGetFoldersForVisualStudioMac</id>
    <content type="html"><![CDATA[<p>NuGet supports configuring the location of the following
<a href="https://docs.microsoft.com/en-us/nuget/consume-packages/managing-the-global-packages-and-cache-folders">global folders</a>:</p>

<ul>
<li>Global NuGet packages cache

<ul>
<li>~/.nuget/packages</li>
</ul>
</li>
<li>HTTP cache

<ul>
<li>~/.local/share/NuGet/v3-cache</li>
</ul>
</li>
<li>NuGet plugins ache

<ul>
<li>~/.local/share/NuGet/plugins-cache</li>
</ul>
</li>
</ul>


<p>The above folder locations can be found by running the following command from Terminal.</p>

<pre><code>nuget locals all -list
</code></pre>

<p>Here we will take a look at how these can be configured for use by Visual Studio for Mac 8.5
when running on macOS Catalina.</p>

<h2>Configuring Global Packages Folder Only</h2>

<p>If only the global packages folder needs to be configured then the simplest way is to
define the globalPackagesFolder folder in the ~/.config/NuGet/NuGet.Config file.</p>

<p>```
<configuration>
  <config></p>

<pre><code>&lt;add key="globalPackagesFolder" value="/Volumes/YourDrive/NuGet/.nuget/packages" /&gt;
</code></pre>

<p>  </config>
  <packageSources></p>

<pre><code>&lt;add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" /&gt;
</code></pre>

<p>  </packageSources>
</configuration>
```</p>

<p>Visual Studio for Mac will need to be restarted before it picks up any changes to the
NuGet.Config file.</p>

<h2>Configuring Global Folders with Environment Variables</h2>

<p>Visual Studio for Mac will not use environment variables defined in the Bash profile ~/.bash_profile or
the Zsh profile ~/.zprofile unless Visual Studio for Mac is run from the Terminal.</p>

<pre><code>open -n "/Applications/Visual Studio.app"
</code></pre>

<p>When Visual Studio for Mac is run from the Dock, or from LaunchPad, it does not inherit
these environment variables.</p>

<p>Let us take a look at how we can define these NuGet environment
variables so that Visual Studio for Mac will use them without having to launch it
from the Terminal.</p>

<p>Create the file ~/Library/LaunchAgents/environment.plist containing the following:</p>

<p><code>
&lt;?xml version=“1.0” encoding=“UTF-8”?&gt;
&lt;!DOCTYPE plist PUBLIC “-//Apple//DTD PLIST 1.0//EN” “https://www.apple.com/DTDs/PropertyList-1.0.dtd”&gt;
&lt;plist version=“1.0”&gt;
&lt;dict&gt;
&lt;key&gt;Label&lt;/key&gt;
&lt;string&gt;my.startup&lt;/string&gt;
&lt;key&gt;ProgramArguments&lt;/key&gt;
&lt;array&gt;
&lt;string&gt;sh&lt;/string&gt;
&lt;string&gt;-c&lt;/string&gt;
&lt;string&gt;launchctl setenv NUGET_PACKAGES /Volumes/YourDrive/NuGet/.nuget/packages
launchctl setenv NUGET_HTTP_CACHE_PATH /Volumes/YourDrive/NuGet/.nuget/v3-cache
launchctl setenv NUGET_PLUGINS_CACHE_PATH /Volumes/YourDrive/NuGet/.nuget/plugins-cache&lt;/string&gt;
&lt;/array&gt;
&lt;key&gt;RunAtLoad&lt;/key&gt;
&lt;true/&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></p>

<p>Replace the NuGet paths <code>/Volumes/YourDrive/NuGet/</code> defined above as required.</p>

<p>Restart macOS to have this Launch Agent run.</p>

<p>After restarting you can check the environment variables are being used by NuGet by
using the command line:</p>

<pre><code>nuget locals all -list
</code></pre>

<p>Now when Visual Studio for Mac is launched from the Dock, or from LaunchPad, it will use these
custom NuGet folders.</p>

<h2>More Information</h2>

<p><a href="https://en.wikipedia.org/wiki/Launchd#launchctl">launchctl</a> setenv defines environment variables
globally so they are available to all macOS
applications launched with <a href="https://en.wikipedia.org/wiki/Launchd">launchd</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.5]]></title>
    <link href="http://lastexitcode.com/blog/2020/04/05/NuGetSupportInVisualStudioMac8-5/"/>
    <updated>2020-04-05T12:00:00+01:00</updated>
    <id>http://lastexitcode.com/blog/2020/04/05/NuGetSupportInVisualStudioMac8-5</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> NuGet 5.4 support</li>
<li> Support Plugin-based NuGet Credential Providers</li>
<li> Fixed requests bypassing the native macOS HTTP handler</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.5</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>NuGet 5.4 support</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/release-notes/nuget-5.4">NuGet 5.4.0.6315</a> is now
included with Visual Studio for Mac 8.5.</p>

<h2>Support Plugin-based NuGet Credential Providers</h2>

<p><a href="https://docs.microsoft.com/en-us/nuget/reference/extensibility/nuget-cross-platform-plugins">NuGet credential provider plugins</a>
are now supported by Visual Studio for Mac.</p>

<p>Plugins are self-contained executables which provide
credentials for NuGet package sources. One example is the
<a href="https://github.com/microsoft/artifacts-credprovider">Azure Artifacts Credential Provider</a> which
Visual Studio for Mac can now use whilst it does not have integrated support for
accessing packages sources available from
<a href="https://docs.microsoft.com/en-us/azure/devops/artifacts/get-started-nuget">Azure DevOps</a>.</p>

<h2>Bug Fixes</h2>

<p><strong>Fixed HTTP requests bypassing the native macOS HTTP handler</strong></p>

<p>Restoring or installing a NuGet package into a project that uses
PackageReferences was bypassing the native macOS HTTP handler.</p>

<p>This was due
to NuGet&rsquo;s CachingSourceProvider creating its own set of
INuGetResourceProviders when it creates a set of new SourceRepository
instances. This resulted in the default HttpSourceResourceProvider
being used, instead of the custom one provided by Visual Studio for Mac.
The default HttpSourceResourceProvider uses Mono&rsquo;s HttpClientHandler not
the native HTTP Client handle NSUrlSessionHandler provided by
Xamarin.Mac. This would happen
when the Nuget package was was downloaded.</p>

<p>NuGet 5.4 now supports defining custom INuGetResourceProvider factory that is used
globally. This is now used by Visual Studio for Mac so all HTTP requests
use the native macOS HTTP handler NSUrlSessionHandler.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Support in Visual Studio for Mac 8.4]]></title>
    <link href="http://lastexitcode.com/blog/2020/01/19/NuGetSupportInVisualStudioMac8-4/"/>
    <updated>2020-01-19T12:00:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2020/01/19/NuGetSupportInVisualStudioMac8-4</id>
    <content type="html"><![CDATA[<h2>Changes</h2>

<ul>
<li> Improved accessibility of the Manage NuGet Packages dialog and Add Package Source dialog</li>
<li> Fixed updating multiple NuGet packages failing due to restricted version range of a common dependency</li>
</ul>


<p>More information on all the new features and changes in <a href="https://www.visualstudio.com/vs/visual-studio-mac/">Visual Studio for Mac 8.4</a>
can be found in the <a href="https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2019-mac-relnotes">release notes</a>.</p>

<h2>Accessibility Improvements &ndash; Manage NuGet Packages dialog</h2>

<p><strong>Voice Over now recognises tabs</strong></p>

<p>The Browse, Installed, Updates and Consolidates tabs are now recognised as tabs
by Voice Over. Previously they were being treated as text labels and Voice Over
would not announce that a tab could be selected via Control-Option-Space.</p>

<p><strong>Voice Over now announces status messages</strong></p>

<p>The status message that is displayed with the busy spinner image is now
announced by Voice Over. When the status message is removed another
message is announced by Voice Over to say the loading has completed
or, if a search filter was entered, search was completed. If no
packages are found when searching this message is also announced
by Voice Over.</p>

<p><strong>Improve Voice Over reading of Id label</strong></p>

<p>The Id label has been changed to ID. Using ID allows Voice Over to announce it as I.D. instead of a single
word. Note that some Voice Over voices, such as English UK, still
announce the text incorrectly. Without changing the label text to be &ldquo;I.D.&rdquo;
there does not seem to be a way of fixing this for all voices. System
Preferences on the Mac can be used to change the pronounciation for
certain words if required.</p>

<p><strong>Voice Over now reads first column header in Consolidate tab</strong></p>

<p>The check box to select a project to consolidate was in its own column that
had no name. Using Voice Over it was not obvious what this check box was for. Now the check
box and the project name are in the same column and Voice Over reads
the column header name, the project name and the checkbox state which
makes it easier to understand what the list is displaying.</p>

<p><strong>Voice Over now reading associated labels for selected UI control</strong></p>

<p>Labels were not associated with their corresponding UI controls which
resulted in them not being read by Voice Over when corresponding UI control
was selected.</p>

<p>The package source combo box is now read by Voice Over as &lsquo;Package Sources&rsquo;.
Previously there was no associated label information being read.</p>

<p>Voice Over now reads the label for Search text field. The search text box now shows &lsquo;Search&rsquo; as
placeholder text.</p>

<p><strong>Voice Over now reading package list information</strong></p>

<p>Voice Over now reads the package information in the list and the check box
can be ticked or unticked by using Voice Over. Previously no information was
read by Voice Over and the check box could not be accessed.</p>

<p><strong>Keyboard can now be used to move across tabs</strong></p>

<p>Previously it was not possible to tab across the Browse, Installed, Updates or Consolidate tabs.</p>

<p>This change will be in Visual Studio for Mac 8.4.2.</p>

<h2>Accessibility Improvements &ndash; Add Package Source Dialog</h2>

<p>In Preferences &ndash; NuGet &ndash; Sources, the Add Package Source dialog
would lose focus when the Browse button was used. A way to reproduce
this is to tab to the Add button, press space, then tab to the
Browse button in the Add Package Source dialog, press space, then
press escape. The Add Package Source dialog then no longer has focus
and tabbing does not work.</p>

<p>This has been fixed by explicitly setting focus back to the parent dialog
when a child dialog is closed.</p>

<h2>Bug Fixes</h2>

<p><strong>Fixed updating multiple NuGet packages failing due to restricted version range of a common dependency</strong></p>

<p>Updating two NuGet package references that have a strict dependency
on a single version of another NuGet package, not explicitly added
to the project, would fail in the Manage NuGet Packages dialog. This
was because the update was being done one NuGet package at a time.</p>

<p>With an Android project that uses Xamarin.Forms this could happen when updating
Xamarin.Essentials, an Xamarin.Android.Support.Core.Utils and Xamarin.Forms at the same time.
The Xamarin.Android.Support NuGet packages
depend on specific versions for their dependencies which can cause the update to fail
depending on whether a NuGet package is updated on its own or in a group. The resulting failure
would be similar to</p>

<p><code>
Version conflict detected for Xamarin.Android.Support.Collections. Install/reference Xamarin.Android.Support.Collections 28.0.0.3 directly to project to resolve this issue.
 MyProject.Android -&gt; Xamarin.Android.Support.Core.Utils 28.0.0.3 -&gt; Xamarin.Android.Support.Compat 28.0.0.3 -&gt; Xamarin.Android.Support.Collections (= 28.0.0.3)
 MyProject.Android -&gt; Xamarin.Essentials 1.2.0 -&gt; Xamarin.Android.Support.CustomTabs 28.0.0.1 -&gt; Xamarin.Android.Support.Collections (= 28.0.0.1).
</code></p>

<p>Updating NuGet packages in the Manage NuGet packages dialog is now done
as a batch instead of individually. This allows NuGet to
update both NuGet packages so they then use the new strict dependency.</p>

<p>Note that updating all packages in the project from the Solution
window does not have this problem since there the packages were already
updated together in a batch.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project System Tools for Visual Studio for Mac]]></title>
    <link href="http://lastexitcode.com/blog/2019/12/31/ProjectSystemToolsForVisualStudioMac/"/>
    <updated>2019-12-31T12:00:00+00:00</updated>
    <id>http://lastexitcode.com/blog/2019/12/31/ProjectSystemToolsForVisualStudioMac</id>
    <content type="html"><![CDATA[<p>The <a href="https://github.com/mrward/monodevelop-project-system-tools">Project System Tools extension</a> provides
MSBuild design-time and build logging for Visual Studio for Mac.</p>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildLoggingBinLogFile.png" title="&lsquo;Build Logging window and BinLog tree view&rsquo; &lsquo;Build Logging window and BinLog tree view&rsquo;" ></p>

<p>This is based on the <a href="https://github.com/dotnet/project-system-tools">Project System Tools available for Visual Studio on Windows</a> and also re-uses code from this extension.</p>

<h2>Features</h2>

<ul>
<li>Build Logging window

<ul>
<li>Shows a list of builds and design-time builds</li>
</ul>
</li>
<li>View MSBuild log output for all builds and design-time builds</li>
<li>View MSBuild binary logs for builds

<ul>
<li>Build tab shows a tree view of the build results from the binary log</li>
<li>Target Summary tab shows target name, number of calls, timings and file location</li>
<li>Task Summary tab shows task name, number of calls, timings and file location</li>
</ul>
</li>
</ul>


<h2>Supports</h2>

<ul>
<li>Visual Studio Mac 8.1 or later.</li>
</ul>


<h2>Build Logging Window</h2>

<p>To open the Build Logging Window</p>

<ul>
<li>Select View &ndash; Pads &ndash; Build Logging</li>
</ul>


<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildLoggingWindow.png" title="&lsquo;Build Logging window&rsquo; &lsquo;Build Logging window&rsquo;" ></p>

<p>Click the green arrow to enable logging for builds and design-time builds.</p>

<p>To stop the logging click the red square.</p>

<p>To filter the targets use the combo box to restrict the items shown to builds or design time builds, or use the search on the right hand side of the window.</p>

<h2>MSBuild Log Output</h2>

<p>To open the MSBuild log output</p>

<ul>
<li>Double click the row in the Build Logging window or</li>
<li>Right click the row and select Open Log File</li>
</ul>


<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildLoggingOpenLogFileMenu.png" title="&lsquo;Open Log File context menu&rsquo; &lsquo;Open Log File context menu&rsquo;" ></p>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/MSBuildLogFile.png" title="&lsquo;MSBuild Log File&rsquo; &lsquo;MSBuild Log File&rsquo;" ></p>

<p>The verbosity of the MSBuild log output is configured in Preferences &ndash; Projects &ndash; Build &ndash; Log verbosity.</p>

<h2>MSBuild Binary Log</h2>

<p>To open a binary log file</p>

<ul>
<li>Right click the row in the Build Logging window and select Open Binary Log File</li>
</ul>


<p>Note that binary logs are only available when the project or solution is built.
Support for design-time build binary logs should be available in Visual Studio for Mac 8.5.</p>

<p>Three tabs are provided by the Project System Tools extension when a binary log file is opened.</p>

<ul>
<li>Build

<ul>
<li>Tree view of the binary log targets and tasks</li>
<li>Properties window shows more information about the selected task or target</li>
</ul>
</li>
<li>Target Summary

<ul>
<li>Target name</li>
<li>Source filename</li>
<li>Number of calls</li>
<li>Time taken</li>
<li>Percentage of total time taken</li>
</ul>
</li>
<li>Task Summary

<ul>
<li>Task name</li>
<li>Source filename</li>
<li>Number of calls</li>
<li>Time taken</li>
<li>Percentage of total time taken</li>
</ul>
</li>
</ul>


<h2>Build Tab</h2>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/MSBuildBinaryLogFileBuildTab.png" title="&lsquo;MSBuild Binary Log File &ndash; Build tab&rsquo; &lsquo;MSBuild Binary Log File &ndash; Build tab&rsquo;" ></p>

<p>The Build tab shows the run times of the targets and tasks, and whether they ran successfully.</p>

<p>Skipped tasks and targets are shown in light grey text.</p>

<p>Selecting a tree node in the Build tab will show more information about that node in the Properties window.</p>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/BuildTabProperties.png" title="&lsquo;MSBuild Binary Log File &ndash; Build tab &ndash; Properties window&rsquo; &lsquo;MSBuild Binary Log File &ndash; Build tab &ndash; Properties window&rsquo;" ></p>

<h2>Target Summary Tab</h2>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/TargetSummaryTab.png" title="&lsquo;MSBuild Binary Log File &ndash; Target Summary tab&rsquo; &lsquo;MSBuild Binary Log File &ndash; Target Summary tab&rsquo;" ></p>

<p>Targets are shown in the order they were run and can be sorted by clicking the column headers.</p>

<h2>Task Summary Tab</h2>

<p><img src="/images/blog/ProjectSystemToolsForVisualStudioMac/TaskSummaryTab.png" title="&lsquo;MSBuild Binary Log File &ndash; Task Summary tab&rsquo; &lsquo;MSBuild Binary Log File &ndash; Task Summary tab&rsquo;" ></p>

<p>Tasks are shown in the order they were run and can be sorted by clicking the column headers.</p>

<h2>Project System Tools Installation</h2>

<p>The Project System Tools extension is available from the Visual Studio for Mac extensions repository. To install the addin:</p>

<ul>
<li>From the main menu, open the Extensions Manager dialog.</li>
<li>Select the Gallery tab.</li>
<li>Expand IDE extensions.</li>
<li>Select Project System Tools</li>
<li>Click the Refresh button if the extension is not visible.</li>
<li>Click Install… to install the extension.</li>
<li>Restart Visual Studio for Mac.</li>
</ul>


<h2>Links</h2>

<ul>
<li><a href="https://github.com/mrward/monodevelop-project-system-tools">Project System Tools source code &ndash; Visual Studio for Mac</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=VisualStudioProductTeam.ProjectSystemTools">Project System Tools Marketplace &ndash; Visual Studio on Windows</a></li>
<li><a href="https://github.com/dotnet/project-system-tools">Project System Tools source code &ndash; Visual Studio for Windows</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
